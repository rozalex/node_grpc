// source: customers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.priorityconnect.customers.v1.Bool', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.CompanyData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.ContactData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.ContactDataRequest', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.EmailConfirmedResponse', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.EmployeeData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.InternalAccountData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.KeyRequest', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.LoginExternalData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.LoginExternalData.IndentityProvider', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.LoginInternalData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.OidcData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.ResetContext', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.ResetPasswordData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.String', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.Strings', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.TenantData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.UserData', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.UserDataList', null, global);
goog.exportSymbol('proto.priorityconnect.customers.v1.UserDataRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.String = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.String, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.String.displayName = 'proto.priorityconnect.customers.v1.String';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.Strings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priorityconnect.customers.v1.Strings.repeatedFields_, null);
};
goog.inherits(proto.priorityconnect.customers.v1.Strings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.Strings.displayName = 'proto.priorityconnect.customers.v1.Strings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.Bool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.Bool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.Bool.displayName = 'proto.priorityconnect.customers.v1.Bool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.TenantData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.TenantData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.TenantData.displayName = 'proto.priorityconnect.customers.v1.TenantData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.CompanyData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.CompanyData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.CompanyData.displayName = 'proto.priorityconnect.customers.v1.CompanyData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.UserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.UserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.UserDataRequest.displayName = 'proto.priorityconnect.customers.v1.UserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.ContactDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.ContactDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.ContactDataRequest.displayName = 'proto.priorityconnect.customers.v1.ContactDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.UserData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.UserData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.UserData.displayName = 'proto.priorityconnect.customers.v1.UserData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.UserDataList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.priorityconnect.customers.v1.UserDataList.repeatedFields_, null);
};
goog.inherits(proto.priorityconnect.customers.v1.UserDataList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.UserDataList.displayName = 'proto.priorityconnect.customers.v1.UserDataList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.ContactData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.ContactData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.ContactData.displayName = 'proto.priorityconnect.customers.v1.ContactData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.EmployeeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.EmployeeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.EmployeeData.displayName = 'proto.priorityconnect.customers.v1.EmployeeData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.EmailConfirmedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.EmailConfirmedResponse.displayName = 'proto.priorityconnect.customers.v1.EmailConfirmedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.InternalAccountData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.InternalAccountData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.InternalAccountData.displayName = 'proto.priorityconnect.customers.v1.InternalAccountData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.LoginInternalData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.LoginInternalData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.LoginInternalData.displayName = 'proto.priorityconnect.customers.v1.LoginInternalData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.LoginExternalData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.LoginExternalData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.LoginExternalData.displayName = 'proto.priorityconnect.customers.v1.LoginExternalData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.ResetPasswordData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.ResetPasswordData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.ResetPasswordData.displayName = 'proto.priorityconnect.customers.v1.ResetPasswordData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.ResetContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.ResetContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.ResetContext.displayName = 'proto.priorityconnect.customers.v1.ResetContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.OidcData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.OidcData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.OidcData.displayName = 'proto.priorityconnect.customers.v1.OidcData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.priorityconnect.customers.v1.KeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.priorityconnect.customers.v1.KeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.priorityconnect.customers.v1.KeyRequest.displayName = 'proto.priorityconnect.customers.v1.KeyRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.String.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.String.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.String} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.String.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.String}
 */
proto.priorityconnect.customers.v1.String.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.String;
  return proto.priorityconnect.customers.v1.String.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.String} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.String}
 */
proto.priorityconnect.customers.v1.String.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.String.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.String.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.String} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.String.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.String.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.String} returns this
 */
proto.priorityconnect.customers.v1.String.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priorityconnect.customers.v1.Strings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.Strings.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.Strings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.Strings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.Strings.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.Strings}
 */
proto.priorityconnect.customers.v1.Strings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.Strings;
  return proto.priorityconnect.customers.v1.Strings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.Strings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.Strings}
 */
proto.priorityconnect.customers.v1.Strings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.Strings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.Strings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.Strings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.Strings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.priorityconnect.customers.v1.Strings.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.priorityconnect.customers.v1.Strings} returns this
 */
proto.priorityconnect.customers.v1.Strings.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.priorityconnect.customers.v1.Strings} returns this
 */
proto.priorityconnect.customers.v1.Strings.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.priorityconnect.customers.v1.Strings} returns this
 */
proto.priorityconnect.customers.v1.Strings.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.Bool.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.Bool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.Bool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.Bool.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.Bool}
 */
proto.priorityconnect.customers.v1.Bool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.Bool;
  return proto.priorityconnect.customers.v1.Bool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.Bool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.Bool}
 */
proto.priorityconnect.customers.v1.Bool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.Bool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.Bool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.Bool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.Bool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool result = 1;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.Bool.prototype.getResult = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.Bool} returns this
 */
proto.priorityconnect.customers.v1.Bool.prototype.setResult = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.TenantData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.TenantData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.TenantData.toObject = function(includeInstance, msg) {
  var f, obj = {
    licenseid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tenantid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tabini: jspb.Message.getFieldWithDefault(msg, 3, ""),
    wcf: jspb.Message.getFieldWithDefault(msg, 4, ""),
    server: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hosting: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    inactive: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    version: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    basiclanguage: jspb.Message.getFieldWithDefault(msg, 10, 0),
    webclient: jspb.Message.getFieldWithDefault(msg, 11, ""),
    externalonly: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    admode: jspb.Message.getFieldWithDefault(msg, 13, 0),
    defaultprettyname: jspb.Message.getFieldWithDefault(msg, 14, ""),
    locktype: jspb.Message.getFieldWithDefault(msg, 15, ""),
    tsdisabled: jspb.Message.getBooleanFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.TenantData}
 */
proto.priorityconnect.customers.v1.TenantData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.TenantData;
  return proto.priorityconnect.customers.v1.TenantData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.TenantData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.TenantData}
 */
proto.priorityconnect.customers.v1.TenantData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTabini(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWcf(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServer(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDname(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHosting(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInactive(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVersion(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBasiclanguage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebclient(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExternalonly(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAdmode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultprettyname(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocktype(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTsdisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.TenantData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.TenantData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.TenantData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLicenseid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTabini();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWcf();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServer();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHosting();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getInactive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getBasiclanguage();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getWebclient();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getExternalonly();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getAdmode();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getDefaultprettyname();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLocktype();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTsdisabled();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};


/**
 * optional string licenseID = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getLicenseid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setLicenseid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tenantID = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getTenantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setTenantid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tabini = 3;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getTabini = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setTabini = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string wcf = 4;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getWcf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setWcf = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string server = 5;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setServer = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string dname = 6;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getDname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setDname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool hosting = 7;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getHosting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setHosting = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool inactive = 8;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional float version = 9;
 * @return {number}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setVersion = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int64 basicLanguage = 10;
 * @return {number}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getBasiclanguage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setBasiclanguage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string webclient = 11;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getWebclient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setWebclient = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool externalOnly = 12;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getExternalonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setExternalonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int64 admode = 13;
 * @return {number}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getAdmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setAdmode = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string defaultPrettyName = 14;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getDefaultprettyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setDefaultprettyname = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string locktype = 15;
 * @return {string}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getLocktype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setLocktype = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool tsdisabled = 16;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.TenantData.prototype.getTsdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.TenantData} returns this
 */
proto.priorityconnect.customers.v1.TenantData.prototype.setTsdisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.CompanyData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.CompanyData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.CompanyData.toObject = function(includeInstance, msg) {
  var f, obj = {
    dname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    compid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.CompanyData}
 */
proto.priorityconnect.customers.v1.CompanyData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.CompanyData;
  return proto.priorityconnect.customers.v1.CompanyData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.CompanyData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.CompanyData}
 */
proto.priorityconnect.customers.v1.CompanyData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.CompanyData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.CompanyData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.CompanyData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string dname = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.getDname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.CompanyData} returns this
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.setDname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.CompanyData} returns this
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string compid = 3;
 * @return {string}
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.getCompid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.CompanyData} returns this
 */
proto.priorityconnect.customers.v1.CompanyData.prototype.setCompid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.UserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.UserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.UserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.UserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subject: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.UserDataRequest}
 */
proto.priorityconnect.customers.v1.UserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.UserDataRequest;
  return proto.priorityconnect.customers.v1.UserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.UserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.UserDataRequest}
 */
proto.priorityconnect.customers.v1.UserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.UserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.UserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.UserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.UserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tenantID = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserDataRequest.prototype.getTenantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserDataRequest} returns this
 */
proto.priorityconnect.customers.v1.UserDataRequest.prototype.setTenantid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subject = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserDataRequest.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserDataRequest} returns this
 */
proto.priorityconnect.customers.v1.UserDataRequest.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.ContactDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.ContactDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ContactDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.ContactDataRequest}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.ContactDataRequest;
  return proto.priorityconnect.customers.v1.ContactDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.ContactDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.ContactDataRequest}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.ContactDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.ContactDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ContactDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string tenantID = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.getTenantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ContactDataRequest} returns this
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.setTenantid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subject = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ContactDataRequest} returns this
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dname = 3;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.getDname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ContactDataRequest} returns this
 */
proto.priorityconnect.customers.v1.ContactDataRequest.prototype.setDname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.UserData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.UserData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.UserData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.UserData.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userlogin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    restlogin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    employeeid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    subject: jspb.Message.getFieldWithDefault(msg, 5, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    name: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.UserData}
 */
proto.priorityconnect.customers.v1.UserData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.UserData;
  return proto.priorityconnect.customers.v1.UserData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.UserData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.UserData}
 */
proto.priorityconnect.customers.v1.UserData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserlogin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestlogin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmployeeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.UserData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.UserData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.UserData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.UserData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserlogin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRestlogin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEmployeeid();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userlogin = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getUserlogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setUserlogin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string restlogin = 3;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getRestlogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setRestlogin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 userId = 4;
 * @return {number}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 employeeID = 7;
 * @return {number}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getEmployeeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setEmployeeid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string subject = 5;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool active = 6;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string name = 8;
 * @return {string}
 */
proto.priorityconnect.customers.v1.UserData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.UserData} returns this
 */
proto.priorityconnect.customers.v1.UserData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.priorityconnect.customers.v1.UserDataList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.UserDataList.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.UserDataList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.UserDataList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.UserDataList.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountslistList: jspb.Message.toObjectList(msg.getAccountslistList(),
    proto.priorityconnect.customers.v1.UserData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.UserDataList}
 */
proto.priorityconnect.customers.v1.UserDataList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.UserDataList;
  return proto.priorityconnect.customers.v1.UserDataList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.UserDataList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.UserDataList}
 */
proto.priorityconnect.customers.v1.UserDataList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.priorityconnect.customers.v1.UserData;
      reader.readMessage(value,proto.priorityconnect.customers.v1.UserData.deserializeBinaryFromReader);
      msg.addAccountslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.UserDataList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.UserDataList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.UserDataList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.UserDataList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.priorityconnect.customers.v1.UserData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserData accountsList = 1;
 * @return {!Array<!proto.priorityconnect.customers.v1.UserData>}
 */
proto.priorityconnect.customers.v1.UserDataList.prototype.getAccountslistList = function() {
  return /** @type{!Array<!proto.priorityconnect.customers.v1.UserData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.priorityconnect.customers.v1.UserData, 1));
};


/**
 * @param {!Array<!proto.priorityconnect.customers.v1.UserData>} value
 * @return {!proto.priorityconnect.customers.v1.UserDataList} returns this
*/
proto.priorityconnect.customers.v1.UserDataList.prototype.setAccountslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.priorityconnect.customers.v1.UserData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.priorityconnect.customers.v1.UserData}
 */
proto.priorityconnect.customers.v1.UserDataList.prototype.addAccountslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.priorityconnect.customers.v1.UserData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.priorityconnect.customers.v1.UserDataList} returns this
 */
proto.priorityconnect.customers.v1.UserDataList.prototype.clearAccountslistList = function() {
  return this.setAccountslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.ContactData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.ContactData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ContactData.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    dname: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.ContactData}
 */
proto.priorityconnect.customers.v1.ContactData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.ContactData;
  return proto.priorityconnect.customers.v1.ContactData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.ContactData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.ContactData}
 */
proto.priorityconnect.customers.v1.ContactData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.ContactData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.ContactData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ContactData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ContactData} returns this
 */
proto.priorityconnect.customers.v1.ContactData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ContactData} returns this
 */
proto.priorityconnect.customers.v1.ContactData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 id = 3;
 * @return {number}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.ContactData} returns this
 */
proto.priorityconnect.customers.v1.ContactData.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.ContactData} returns this
 */
proto.priorityconnect.customers.v1.ContactData.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string dname = 5;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ContactData.prototype.getDname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ContactData} returns this
 */
proto.priorityconnect.customers.v1.ContactData.prototype.setDname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.EmployeeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.EmployeeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.EmployeeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    employeeid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    subject: jspb.Message.getFieldWithDefault(msg, 4, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    name: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.EmployeeData}
 */
proto.priorityconnect.customers.v1.EmployeeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.EmployeeData;
  return proto.priorityconnect.customers.v1.EmployeeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.EmployeeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.EmployeeData}
 */
proto.priorityconnect.customers.v1.EmployeeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmployeeid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.EmployeeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.EmployeeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.EmployeeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEmployeeid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.EmployeeData} returns this
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 userId = 2;
 * @return {number}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.EmployeeData} returns this
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 employeeID = 3;
 * @return {number}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.getEmployeeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.EmployeeData} returns this
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.setEmployeeid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string subject = 4;
 * @return {string}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.EmployeeData} returns this
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool active = 5;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.EmployeeData} returns this
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.EmployeeData} returns this
 */
proto.priorityconnect.customers.v1.EmployeeData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.EmailConfirmedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.EmailConfirmedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    challenge: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lang: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.EmailConfirmedResponse}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.EmailConfirmedResponse;
  return proto.priorityconnect.customers.v1.EmailConfirmedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.EmailConfirmedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.EmailConfirmedResponse}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChallenge(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLang(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.EmailConfirmedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.EmailConfirmedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChallenge();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLang();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.EmailConfirmedResponse} returns this
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string challenge = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.getChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.EmailConfirmedResponse} returns this
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 lang = 3;
 * @return {number}
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.getLang = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.EmailConfirmedResponse} returns this
 */
proto.priorityconnect.customers.v1.EmailConfirmedResponse.prototype.setLang = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.InternalAccountData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.InternalAccountData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.InternalAccountData.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    challenge: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.InternalAccountData}
 */
proto.priorityconnect.customers.v1.InternalAccountData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.InternalAccountData;
  return proto.priorityconnect.customers.v1.InternalAccountData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.InternalAccountData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.InternalAccountData}
 */
proto.priorityconnect.customers.v1.InternalAccountData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChallenge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.InternalAccountData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.InternalAccountData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.InternalAccountData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChallenge();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.InternalAccountData} returns this
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.InternalAccountData} returns this
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string challenge = 3;
 * @return {string}
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.getChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.InternalAccountData} returns this
 */
proto.priorityconnect.customers.v1.InternalAccountData.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.LoginInternalData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.LoginInternalData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.LoginInternalData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.LoginInternalData.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.LoginInternalData}
 */
proto.priorityconnect.customers.v1.LoginInternalData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.LoginInternalData;
  return proto.priorityconnect.customers.v1.LoginInternalData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.LoginInternalData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.LoginInternalData}
 */
proto.priorityconnect.customers.v1.LoginInternalData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.LoginInternalData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.LoginInternalData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.LoginInternalData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.LoginInternalData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.LoginInternalData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.LoginInternalData} returns this
 */
proto.priorityconnect.customers.v1.LoginInternalData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.LoginInternalData.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.LoginInternalData} returns this
 */
proto.priorityconnect.customers.v1.LoginInternalData.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.LoginExternalData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.LoginExternalData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.LoginExternalData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.LoginExternalData.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    idp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.LoginExternalData}
 */
proto.priorityconnect.customers.v1.LoginExternalData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.LoginExternalData;
  return proto.priorityconnect.customers.v1.LoginExternalData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.LoginExternalData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.LoginExternalData}
 */
proto.priorityconnect.customers.v1.LoginExternalData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {!proto.priorityconnect.customers.v1.LoginExternalData.IndentityProvider} */ (reader.readEnum());
      msg.setIdp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.LoginExternalData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.LoginExternalData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.LoginExternalData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.LoginExternalData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdp();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.priorityconnect.customers.v1.LoginExternalData.IndentityProvider = {
  PRIORITY: 0,
  GOOGLE: 1,
  MICROSOFT: 2,
  EXTERNAL: 3
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.LoginExternalData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.LoginExternalData} returns this
 */
proto.priorityconnect.customers.v1.LoginExternalData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional IndentityProvider idp = 2;
 * @return {!proto.priorityconnect.customers.v1.LoginExternalData.IndentityProvider}
 */
proto.priorityconnect.customers.v1.LoginExternalData.prototype.getIdp = function() {
  return /** @type {!proto.priorityconnect.customers.v1.LoginExternalData.IndentityProvider} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.priorityconnect.customers.v1.LoginExternalData.IndentityProvider} value
 * @return {!proto.priorityconnect.customers.v1.LoginExternalData} returns this
 */
proto.priorityconnect.customers.v1.LoginExternalData.prototype.setIdp = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.ResetPasswordData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.ResetPasswordData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.ResetPasswordData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ResetPasswordData.toObject = function(includeInstance, msg) {
  var f, obj = {
    guid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    newpassword: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.ResetPasswordData}
 */
proto.priorityconnect.customers.v1.ResetPasswordData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.ResetPasswordData;
  return proto.priorityconnect.customers.v1.ResetPasswordData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.ResetPasswordData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.ResetPasswordData}
 */
proto.priorityconnect.customers.v1.ResetPasswordData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewpassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.ResetPasswordData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.ResetPasswordData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.ResetPasswordData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ResetPasswordData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNewpassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string guid = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ResetPasswordData.prototype.getGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ResetPasswordData} returns this
 */
proto.priorityconnect.customers.v1.ResetPasswordData.prototype.setGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string newpassword = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ResetPasswordData.prototype.getNewpassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ResetPasswordData} returns this
 */
proto.priorityconnect.customers.v1.ResetPasswordData.prototype.setNewpassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.ResetContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.ResetContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ResetContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    challenge: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lang: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.ResetContext}
 */
proto.priorityconnect.customers.v1.ResetContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.ResetContext;
  return proto.priorityconnect.customers.v1.ResetContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.ResetContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.ResetContext}
 */
proto.priorityconnect.customers.v1.ResetContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChallenge(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLang(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.ResetContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.ResetContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.ResetContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChallenge();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLang();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ResetContext} returns this
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string challenge = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.getChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.ResetContext} returns this
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 lang = 3;
 * @return {number}
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.getLang = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.priorityconnect.customers.v1.ResetContext} returns this
 */
proto.priorityconnect.customers.v1.ResetContext.prototype.setLang = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.OidcData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.OidcData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.OidcData.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 3, ""),
    url: jspb.Message.getFieldWithDefault(msg, 4, ""),
    externalonly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.OidcData}
 */
proto.priorityconnect.customers.v1.OidcData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.OidcData;
  return proto.priorityconnect.customers.v1.OidcData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.OidcData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.OidcData}
 */
proto.priorityconnect.customers.v1.OidcData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExternalonly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.OidcData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.OidcData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.OidcData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExternalonly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.OidcData} returns this
 */
proto.priorityconnect.customers.v1.OidcData.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.OidcData} returns this
 */
proto.priorityconnect.customers.v1.OidcData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string secret = 3;
 * @return {string}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.OidcData} returns this
 */
proto.priorityconnect.customers.v1.OidcData.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.OidcData} returns this
 */
proto.priorityconnect.customers.v1.OidcData.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool externalOnly = 5;
 * @return {boolean}
 */
proto.priorityconnect.customers.v1.OidcData.prototype.getExternalonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.priorityconnect.customers.v1.OidcData} returns this
 */
proto.priorityconnect.customers.v1.OidcData.prototype.setExternalonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.priorityconnect.customers.v1.KeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.priorityconnect.customers.v1.KeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.priorityconnect.customers.v1.KeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.KeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    licenseid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keydata: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.priorityconnect.customers.v1.KeyRequest}
 */
proto.priorityconnect.customers.v1.KeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.priorityconnect.customers.v1.KeyRequest;
  return proto.priorityconnect.customers.v1.KeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.priorityconnect.customers.v1.KeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.priorityconnect.customers.v1.KeyRequest}
 */
proto.priorityconnect.customers.v1.KeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeydata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.priorityconnect.customers.v1.KeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.priorityconnect.customers.v1.KeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.priorityconnect.customers.v1.KeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.priorityconnect.customers.v1.KeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLicenseid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeydata();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string licenseID = 1;
 * @return {string}
 */
proto.priorityconnect.customers.v1.KeyRequest.prototype.getLicenseid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.KeyRequest} returns this
 */
proto.priorityconnect.customers.v1.KeyRequest.prototype.setLicenseid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string keyData = 2;
 * @return {string}
 */
proto.priorityconnect.customers.v1.KeyRequest.prototype.getKeydata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.priorityconnect.customers.v1.KeyRequest} returns this
 */
proto.priorityconnect.customers.v1.KeyRequest.prototype.setKeydata = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.priorityconnect.customers.v1);
